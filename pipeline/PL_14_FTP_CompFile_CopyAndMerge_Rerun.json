{
	"name": "PL_14_FTP_CompFile_CopyAndMerge_Rerun",
	"properties": {
		"activities": [
			{
				"name": "ForEach Copy from FTP_Rerun",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupFailedLastRefresh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@array(activity('LookupFailedLastRefresh').output.value)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If is MultiFileCompressed_Copy_Rerun",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get file info_FailedCopy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(equals(item().FileTransferred, 'N'), equals(pipeline().parameters.FwkItem['MultiFileCompressed'], 'Y'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy file and uncompress_Rerun",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "spi_FwkWatermarkPreconInsert_Rerun",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "SftpReadSettings",
													"recursive": true,
													"disableChunking": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "DS_Adobe_FTP_Binary_Source",
												"type": "DatasetReference",
												"parameters": {
													"Path": {
														"value": "@pipeline().parameters.FwkItem['SrcCompPath']",
														"type": "Expression"
													},
													"Object": {
														"value": "@item().SrcCompRealObject",
														"type": "Expression"
													},
													"CompressionType": {
														"value": "@pipeline().parameters.FwkItem['CompressionType']",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Adobe_ADLS_Binary_Sink",
												"type": "DatasetReference",
												"parameters": {
													"Container": {
														"value": "@pipeline().parameters.FwkItem['SinkContainer']",
														"type": "Expression"
													},
													"Directory": {
														"value": "@pipeline().parameters.FwkItem['SinkDirectory']",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "spi_FwkWatermarkPreconInsert_Rerun",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spi_FwkWatermarkPreconInsert]",
											"storedProcedureParameters": {
												"SrcCompObject": {
													"value": {
														"value": "@pipeline().parameters.FwkItem['SrcCompObject']",
														"type": "Expression"
													},
													"type": "String"
												},
												"SrcCompRealObject": {
													"value": {
														"value": "@item().SrcCompRealObject",
														"type": "Expression"
													},
													"type": "String"
												},
												"LastRefresh": {
													"value": {
														"value": "@formatDateTime('01-01-1900 00:00:00')",
														"type": "Expression"
													},
													"type": "Datetime"
												},
												"LastModifiedTime": {
													"value": {
														"value": "@formatdatetime(pipeline().parameters.PL_01TriggerTime)",
														"type": "Expression"
													},
													"type": "Datetime"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SYN",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "spu_FwkWatermarkPreconUpdate_Rerun",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy file and uncompress_Rerun",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spu_FwkWatermarkPreconUpdate]",
											"storedProcedureParameters": {
												"SrcCompObject": {
													"value": {
														"value": "@pipeline().parameters.FwkItem['SrcCompObject']",
														"type": "Expression"
													},
													"type": "String"
												},
												"SrcCompRealObject": {
													"value": {
														"value": "@item().SrcCompRealObject",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileTransferred": {
													"value": "Y",
													"type": "String"
												},
												"FileMerged": {
													"value": "N",
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SYN",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Get file info_FailedCopy",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Adobe_FTP_Binary_Source",
									"type": "DatasetReference",
									"parameters": {
										"Path": {
											"value": "@pipeline().parameters.FwkItem['SrcCompPath']",
											"type": "Expression"
										},
										"Object": {
											"value": "@item().SrcCompRealObject",
											"type": "Expression"
										},
										"CompressionType": {
											"value": "@pipeline().parameters.FwkItem['CompressionType']",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"itemName",
									"lastModified"
								],
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						}
					]
				}
			},
			{
				"name": "ForEach Merge_Rerun",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ForEach Copy from FTP_Rerun",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@array(activity('LookupFailedLastRefresh').output.value)",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If is MultiFileCompressed_Merge_Rerun",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get file info_Merge_Rerun",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(equals(item().FileMerged, 'N'), equals(pipeline().parameters.FwkItem['MultiFileCompressed'], 'Y'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Merged file_Rerun",
										"description": "Merge two versions of file.",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 2,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings",
													"copyBehavior": "MergeFiles"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"enableSkipIncompatibleRow": true
										},
										"inputs": [
											{
												"referenceName": "DS_Adobe_ADLS_CSV_Source",
												"type": "DatasetReference",
												"parameters": {
													"Container": {
														"value": "@pipeline().parameters.FwkItem['SinkContainer']",
														"type": "Expression"
													},
													"Directory": {
														"value": "@concat(pipeline().parameters.FwkItem['SinkDirectory'], '/', item().SrcCompRealObject)",
														"type": "Expression"
													},
													"Object": {
														"value": "@pipeline().parameters.FwkItem['SrcObject']",
														"type": "Expression"
													},
													"ColDelimiter": {
														"value": "@pipeline().parameters.FwkItem['ColDelimiter']",
														"type": "Expression"
													},
													"RowDelimiter": {
														"value": "@pipeline().parameters.FwkItem['RowDelimiter']",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Adobe_ADLS_CSV_Sink",
												"type": "DatasetReference",
												"parameters": {
													"Container": {
														"value": "@pipeline().parameters.FwkItem['SinkContainer']",
														"type": "Expression"
													},
													"Directory": {
														"value": "@pipeline().parameters.FwkItem['SinkMergeDirectory']",
														"type": "Expression"
													},
													"Object": {
														"value": "@pipeline().parameters.FwkItem['SrcObject']",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "spu_FwkWatermarkPreconUpdate_Merged_Rerun",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Merged file_Rerun",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spu_FwkWatermarkPreconUpdate]",
											"storedProcedureParameters": {
												"SrcCompObject": {
													"value": {
														"value": "@pipeline().parameters.FwkItem['SrcCompObject']",
														"type": "Expression"
													},
													"type": "String"
												},
												"SrcCompRealObject": {
													"value": {
														"value": "@item().SrcCompRealObject",
														"type": "Expression"
													},
													"type": "String"
												},
												"FileTransferred": {
													"value": "Y",
													"type": "String"
												},
												"FileMerged": {
													"value": "Y",
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SYN",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "spi_LogFwkCopyDataRowCount_Published_Rerun",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Merged file_Rerun",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spi_LogFwkMergedDataRowCount]",
											"storedProcedureParameters": {
												"SrcObject": {
													"value": {
														"value": "@pipeline().parameters.FwkItem['SrcObject']",
														"type": "Expression"
													},
													"type": "String"
												},
												"SourceType": {
													"value": {
														"value": "@{pipeline().parameters.FwkItem['SourceType']}",
														"type": "Expression"
													},
													"type": "String"
												},
												"RowsReadInt": {
													"value": {
														"value": "@activity('Merged file_Rerun').output.rowsRead",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"RowsCopiedInt": {
													"value": {
														"value": "@activity('Merged file_Rerun').output.rowsCopied",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"DataReadInt": {
													"value": {
														"value": "@activity('Merged file_Rerun').output.dataRead",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"DataWrittenInt": {
													"value": {
														"value": "@activity('Merged file_Rerun').output.dataWritten",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"LastModifiedTime": {
													"value": {
														"value": "@formatdatetime(pipeline().parameters.PL_01TriggerTime)",
														"type": "Expression"
													},
													"type": "Datetime"
												},
												"FilePath": {
													"value": {
														"value": "@CONCAT('Published', \n'/', pipeline().parameters.FwkItem['CountryId'],\n'/Full', \n'/', pipeline().parameters.FwkItem['SystemName'],\n'/', toUpper(pipeline().parameters.SrcObject),\n'/', if(equals(pipeline().parameters.FwkItem['SinkPathGranularity'],'YY'), formatDateTime(pipeline().parameters.PL_01TriggerTime,'yyyy'),\n\t\tif(equals(pipeline().parameters.FwkItem['SinkPathGranularity'],'MM'), CONCAT(formatDateTime(pipeline().parameters.PL_01TriggerTime,'yyyy'), '/', formatDateTime(pipeline().parameters.PL_01TriggerTime,'MM')),\n\t\t\tif(equals(pipeline().parameters.FwkItem['SinkPathGranularity'],'DD'), CONCAT(formatDateTime(pipeline().parameters.PL_01TriggerTime,'yyyy'), '/', formatDateTime(pipeline().parameters.PL_01TriggerTime,'MM'), '/', formatDateTime(pipeline().parameters.PL_01TriggerTime,'dd')),\n\t\t\t\tif(equals(pipeline().parameters.FwkItem['SinkPathGranularity'],'HH'), CONCAT(formatDateTime(pipeline().parameters.PL_01TriggerTime,'yyyy'), '/', formatDateTime(pipeline().parameters.PL_01TriggerTime,'MM'), '/', formatDateTime(pipeline().parameters.PL_01TriggerTime,'dd'), '/', formatDateTime(pipeline().parameters.PL_01TriggerTime,'HH')), '')))),\n'/'\n)",
														"type": "Expression"
													},
													"type": "String"
												},
												"TriggerId": {
													"value": {
														"value": "@pipeline().TriggerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"ActivityName": {
													"value": "Merged file_Rerun",
													"type": "String"
												},
												"SrcCompObject": {
													"value": {
														"value": "@item().SrcCompObject",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SYN",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Get file info_Merge_Rerun",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Adobe_FTP_Binary_Source",
									"type": "DatasetReference",
									"parameters": {
										"Path": {
											"value": "@pipeline().parameters.FwkItem['SrcCompPath']",
											"type": "Expression"
										},
										"Object": {
											"value": "@item().SrcCompRealObject",
											"type": "Expression"
										},
										"CompressionType": {
											"value": "@pipeline().parameters.FwkItem['CompressionType']",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"itemName",
									"lastModified"
								],
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						}
					]
				}
			},
			{
				"name": "LookupFailedLastRefresh",
				"description": "Executes the SP ‘sps_LookupFwkConfig’ to get the source information of the files to be ingested.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[dbo].[sps_LookupFwkWatermarkPreconFailed]",
						"storedProcedureParameters": {
							"SrcCompObject": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.FwkItem['SrcCompObject']",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQLSYN_Configuration",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"FwkItem": {
				"type": "array"
			},
			"PL_01TriggerTime": {
				"type": "string"
			},
			"FwkLogId": {
				"type": "string"
			},
			"EntRunId": {
				"type": "string"
			},
			"SrcPath": {
				"type": "string"
			},
			"SrcObject": {
				"type": "string"
			}
		},
		"variables": {
			"LastRefresh": {
				"type": "String"
			}
		},
		"folder": {
			"name": "01 Ingestion Module/PL_14_MultiFile_ADLSFullLoad"
		},
		"annotations": [],
		"lastPublishTime": "2022-09-08T00:09:55Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}