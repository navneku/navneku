{
	"name": "PL_01_GetSourceData",
	"properties": {
		"activities": [
			{
				"name": "LookupFwkConfig",
				"description": "Executes the SP ‘sps_LookupFwkConfig’ to get the source information of the files to be ingested.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[dbo].[sps_LookupFwkConfig]",
						"storedProcedureParameters": {
							"AdfName": {
								"type": "String",
								"value": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								}
							},
							"BatchGroupId": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.BatchGroupId",
									"type": "Expression"
								}
							},
							"TriggerName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TriggerName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQLSYN_Configuration",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachObject",
				"description": "Iterates over a dataset and loop by number of rows it gets with the output from ‘LookupFwkConfig’ activity.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupFwkLog",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@array(activity('LookupFwkConfig').output.value)",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 40,
					"activities": [
						{
							"name": "Switch_SourceType",
							"description": "Evaluates the input value ‘SourceType’ corresponding to a case that matches the condition.\n\nFor the SYN it is not in Q2 scope",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@string(item().SourceType)",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "PSQL",
										"activities": [
											{
												"name": "Execute PL_15_PostgreSQLFullLoad",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_15_PostgreSQLFullLoad",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FwkItem": {
															"value": "@item()",
															"type": "Expression"
														},
														"PL_01TriggerTime": {
															"value": "@convertFromUtc(formatdatetime(pipeline().TriggerTime),activity('LookupFwkConfig').output.value[0]['TimezoneName'])",
															"type": "Expression"
														},
														"FwkLogId": {
															"value": "@activity('LookupFwkLog').output.firstrow.FwkLogId",
															"type": "Expression"
														},
														"EntRunId": {
															"value": "@pipeline().parameters.EntRunId",
															"type": "Expression"
														},
														"SrcPath": {
															"value": "@item().SrcPath",
															"type": "Expression"
														},
														"SrcObject": {
															"value": "@item().SrcObject",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "SYN",
										"activities": [
											{
												"name": "Execute PL_16_SYNDeltaLoad",
												"description": "Invokes the ‘PL_16_SYNDeltaLoad’ pipeline and send all the parameters returned by ‘LookupFwkLog’ and ‘LookupFwkConfig’.",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_16_SYNDeltaLoad",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FwkItem": {
															"value": "@item()",
															"type": "Expression"
														},
														"PL_01TriggerTime": {
															"value": "@pipeline().TriggerTime",
															"type": "Expression"
														},
														"FwkLogId": {
															"value": "@activity('LookupFwkLog').output.firstrow.FwkLogId",
															"type": "Expression"
														},
														"EntRunId": {
															"value": "@pipeline().parameters.EntRunId",
															"type": "Expression"
														},
														"SrcPath": {
															"value": "@item().SrcPath",
															"type": "Expression"
														},
														"SrcObject": {
															"value": "@item().SrcObject",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "Oracle",
										"activities": [
											{
												"name": "Execute PL_17_OracleSQLFullLoad_copy1",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_17_OracleSQLFullLoad",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FwkItem": {
															"value": "@item()",
															"type": "Expression"
														},
														"PL_01TriggerTime": {
															"value": "@convertFromUtc(formatdatetime(pipeline().TriggerTime),activity('LookupFwkConfig').output.value[0]['TimezoneName'])",
															"type": "Expression"
														},
														"FwkLogId": {
															"value": "@activity('LookupFwkLog').output.firstrow.FwkLogId",
															"type": "Expression"
														},
														"EntRunId": {
															"value": "@pipeline().parameters.EntRunId",
															"type": "Expression"
														},
														"SrcPath": {
															"value": "@item().SrcPath",
															"type": "Expression"
														},
														"SrcObject": {
															"value": "@item().SrcObject",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "FTP",
										"activities": [
											{
												"name": "Execute PL_14_FTPFullLoad",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_14_FTPFullLoad",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FwkItem": {
															"value": "@item()",
															"type": "Expression"
														},
														"PL_01TriggerTime": {
															"value": "@pipeline().TriggerTime",
															"type": "Expression"
														},
														"FwkLogId": {
															"value": "@activity('LookupFwkLog').output.firstrow.FwkLogId",
															"type": "Expression"
														},
														"EntRunId": {
															"value": "@pipeline().parameters.EntRunId",
															"type": "Expression"
														},
														"SrcPath": {
															"value": "@item().SrcPath",
															"type": "Expression"
														},
														"SrcObject": {
															"value": "@item().SrcObject",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "ADLS",
										"activities": [
											{
												"name": "Execute PL_14_ADLSFullLoad_Main",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_14_File_ADLSFullLoad_Main",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FwkItem": {
															"value": "@item()",
															"type": "Expression"
														},
														"PL_01TriggerTime": {
															"value": "@pipeline().TriggerTime",
															"type": "Expression"
														},
														"FwkLogId": {
															"value": "@activity('LookupFwkLog').output.firstrow.FwkLogId",
															"type": "Expression"
														},
														"EntRunId": {
															"value": "@pipeline().parameters.EntRunId",
															"type": "Expression"
														},
														"SrcPath": {
															"value": "@item().SrcPath",
															"type": "Expression"
														},
														"SrcObject": {
															"value": "@item().SrcObject",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "FTP_CLN",
										"activities": [
											{
												"name": "Execute PL_14_File_Space_FTPFullLoad_Main",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_14_File_Space_FTPFullLoad_Main",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FwkItem": {
															"value": "@item()",
															"type": "Expression"
														},
														"PL_01TriggerTime": {
															"value": "@pipeline().TriggerTime",
															"type": "Expression"
														},
														"FwkLogId": {
															"value": "@activity('LookupFwkLog').output.firstrow.FwkLogId",
															"type": "Expression"
														},
														"EntRunId": {
															"value": "@pipeline().parameters.EntRunId",
															"type": "Expression"
														},
														"SrcPath": {
															"value": "\n@item().SrcPath",
															"type": "Expression"
														},
														"SrcObject": {
															"value": "@item().SrcObject",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "Ftp_Adobe",
										"activities": [
											{
												"name": "Execute Ftp Adobe Ingestion",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PL_14_File_ADLSFullLoad_Adobe",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FwkItem": {
															"value": "@item()",
															"type": "Expression"
														},
														"PL_01TriggerTime": {
															"value": "@pipeline().TriggerTime",
															"type": "Expression"
														},
														"FwkLogId": {
															"value": "@activity('LookupFwkLog').output.firstrow.FwkLogId",
															"type": "Expression"
														},
														"EntRunId": {
															"value": "@pipeline().parameters.EntRunId",
															"type": "Expression"
														},
														"SrcPath": {
															"value": "@item().SrcPath",
															"type": "Expression"
														},
														"SrcObject": {
															"value": "@item().SrcObject",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "InsertIntoFwkLog",
				"description": "Executes the SP spi_FwkLogInsert to insert record into FwkLog table with the execution module information by pipeline id and with null status.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LookupFwkConfig",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spi_FwkLogInsert]",
					"storedProcedureParameters": {
						"ModuleRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineTriggerDT": {
							"value": {
								"value": "@convertFromUtc(formatdatetime(pipeline().TriggerTime),activity('LookupFwkConfig').output.value[0]['TimezoneName'])",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"TriggerId": {
							"value": {
								"value": "@pipeline().TriggerId",
								"type": "Expression"
							},
							"type": "String"
						},
						"Module": {
							"value": {
								"value": "Ingestion",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartDate": {
							"value": {
								"value": "@convertFromUtc(formatdatetime(pipeline().TriggerTime),activity('LookupFwkConfig').output.value[0]['TimezoneName'])",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"EntRunId": {
							"value": {
								"value": "@pipeline().parameters.EntRunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SYN",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "sp_UpdateExecutionLogS",
				"description": "Executes the SP spu_FwkLogUpdate to update the record created by the ‘InsertIntoFwkLog’ activity in the table ‘FwkLog’ by updating the columns ‘PipelineStatus’ to ‘Success’.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEachObject",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spu_FwkLogUpdate]",
					"storedProcedureParameters": {
						"PipelineStatus": {
							"value": {
								"value": "Success",
								"type": "Expression"
							},
							"type": "String"
						},
						"ModuleRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SYN",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LookupFwkLog",
				"description": "Executes the SP ‘sps_LookupFwkLog’ to read and returned to the ADF the last FwkRunId of the current execution.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "InsertIntoFwkLog",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[dbo].[sps_LookupFwkLog]",
						"storedProcedureParameters": {
							"ModuleRunId": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQLSYN_Configuration",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "sp_UpdateExecutionLogF",
				"description": "Executes the SP spu_FwkLogUpdate to update the record created by the ‘InsertIntoFwkLog’ activity in the table ‘FwkLog’ by updating the columns ‘PipelineStatus’ to ‘Failed’.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEachObject",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spu_FwkLogUpdate]",
					"storedProcedureParameters": {
						"PipelineStatus": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"ModuleRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SYN",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PL_DataValidation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEachObject",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_DataValidation",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"LookupFwkConfig": {
							"value": "@array(activity('LookupFwkConfig').output.value)",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"EntRunId": {
				"type": "string"
			},
			"TriggerName": {
				"type": "string"
			},
			"BatchGroupId": {
				"type": "int"
			}
		},
		"folder": {
			"name": "01 Ingestion Module"
		},
		"annotations": [],
		"lastPublishTime": "2022-09-20T04:54:39Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}